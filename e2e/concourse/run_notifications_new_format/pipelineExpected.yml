# Generated using halfpipe cli version 0.0.0-DEV from file e2e/concourse/run_notifications_new_format/.halfpipe.io for team halfpipe-team
jobs:
- build_log_retention:
    builds: 10
    minimum_succeeded_builds: 1
  name: test
  on_failure:
    attempts: 2
    no_get: true
    params:
      channel: '#test'
      icon_url: https://concourse.halfpipe.io/public/images/favicon-failed.png
      text: Pipeline `$BUILD_PIPELINE_NAME`, task `$BUILD_JOB_NAME` failed. <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME_URLENCODED/builds/$BUILD_NAME|View
        Pipeline>
      username: Halfpipe
    put: slack
    timeout: 15m
  plan:
  - attempts: 2
    get: git
    params:
      depth: 1
    timeout: 15m
    trigger: true
  - config:
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
      image_resource:
        name: ""
        source:
          registry_mirror:
            host: eu-mirror.gcr.io
          repository: alpine
          tag: test
        type: registry-image
      inputs:
      - name: git
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
        MULTIPLE: ((levels/secret/deep.secret))
        RUNNING_IN_CI: "true"
      platform: linux
      run:
        args:
        - -c
        - |
          if ! which bash > /dev/null && [ "$SUPPRESS_BASH_WARNING" != "true" ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo "Or if you are sure you don't need bash you can suppress this warning by setting the environment variable \"SUPPRESS_BASH_WARNING\" to \"true\"."
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:buster-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../../.git/ref`

          ./a
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/concourse/run_notifications_new_format
        path: /bin/sh
    task: test
    timeout: 1h
  serial: true
resource_types:
- check_every: 24h0m0s
  name: halfpipe-slack-resource
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/halfpipe-slack-resource
    tag: latest
    username: _json_key
  type: registry-image
resources:
- check_every: 10m0s
  name: git
  source:
    branch: main
    paths:
    - e2e/concourse/run
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
  type: git
- check_every: 24h0m0s
  name: slack
  source:
    token: ((halfpipe-slack.token))
  type: halfpipe-slack-resource
