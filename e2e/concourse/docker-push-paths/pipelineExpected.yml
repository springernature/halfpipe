# Generated using halfpipe cli version 0.0.0-DEV from file e2e/concourse/docker-push-paths/.halfpipe.io for team halfpipe-team
jobs:
- build_log_retention:
    minimum_succeeded_builds: 1
  name: push to docker registry
  plan:
  - attempts: 2
    get: git
    timeout: 15m
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: alpine
        type: docker-image
      inputs:
      - name: git
      outputs:
      - name: tagList
      platform: linux
      run:
        args:
        - -c
        - |-
          GIT_REF=`[ -f git/.git/ref ] && cat git/.git/ref || true`
          VERSION=`[ -f version/version ] && cat version/version || true`
          printf "%s %s latest" "$GIT_REF" "$VERSION" > tagList/tagList
          printf "Image will be tagged with: %s\n" $(cat tagList/tagList)
        path: /bin/sh
    task: create-tag-list
    timeout: 1h
  - config:
      image_resource:
        name: ""
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-buildx
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      - name: tagList
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
        DOCKER_CONFIG_JSON: ((halfpipe-gcr.docker_config))
        RUNNING_IN_CI: "true"
      platform: linux
      run:
        args:
        - -c
        - |-
          echo $DOCKER_CONFIG_JSON > ~/.docker/config.json
          echo $ docker buildx build \
            -f git/e2e/concourse/docker-push-paths/dockerfiles/Dockerfile \
            --push \
            --provenance false \
            --platform linux/amd64 \
            --tag eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe-fly:$(cat git/.git/ref) \
            --build-arg ARTIFACTORY_PASSWORD \
            --build-arg ARTIFACTORY_URL \
            --build-arg ARTIFACTORY_USERNAME \
            --build-arg RUNNING_IN_CI \
            --secret id=ARTIFACTORY_PASSWORD \
            --secret id=ARTIFACTORY_URL \
            --secret id=ARTIFACTORY_USERNAME \
            git/e2e/concourse/docker-push-paths/some/build/dir
          docker buildx build \
            -f git/e2e/concourse/docker-push-paths/dockerfiles/Dockerfile \
            --push \
            --provenance false \
            --platform linux/amd64 \
            --tag eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe-fly:$(cat git/.git/ref) \
            --build-arg ARTIFACTORY_PASSWORD \
            --build-arg ARTIFACTORY_URL \
            --build-arg ARTIFACTORY_USERNAME \
            --build-arg RUNNING_IN_CI \
            --secret id=ARTIFACTORY_PASSWORD \
            --secret id=ARTIFACTORY_URL \
            --secret id=ARTIFACTORY_USERNAME \
            git/e2e/concourse/docker-push-paths/some/build/dir
        path: /bin/sh
    privileged: true
    task: build
    timeout: 1h
  - config:
      image_resource:
        name: ""
        source:
          repository: aquasec/trivy
        type: docker-image
      inputs:
      - name: git
      params:
        DOCKER_CONFIG_JSON: ((halfpipe-gcr.docker_config))
      platform: linux
      run:
        args:
        - -c
        - |-
          [ -f .trivyignore ] && echo "Ignoring the following CVE's due to .trivyignore" || true
          [ -f .trivyignore ] && cat .trivyignore; echo || true
          trivy image --timeout 15m --ignore-unfixed --severity CRITICAL --scanners vuln --exit-code 0 eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe-fly:$(cat ../../../.git/ref) || true
        dir: git/e2e/concourse/docker-push-paths
        path: /bin/sh
    task: trivy
    timeout: 1h
  - config:
      image_resource:
        name: ""
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-buildx
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      - name: tagList
      params:
        DOCKER_CONFIG_JSON: ((halfpipe-gcr.docker_config))
      platform: linux
      run:
        args:
        - -c
        - |-
          echo $DOCKER_CONFIG_JSON > ~/.docker/config.json
          for tag in $(cat tagList/tagList) ; do docker buildx imagetools create eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe-fly:$(cat git/.git/ref) --tag springerplatformengineering/halfpipe-fly:$tag; done
        path: /bin/sh
    privileged: true
    task: publish-final-image
    timeout: 1h
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  name: push to docker registry again
  plan:
  - attempts: 2
    get: git
    passed:
    - push to docker registry
    timeout: 15m
    trigger: true
  - config:
      image_resource:
        name: ""
        source:
          repository: alpine
        type: docker-image
      inputs:
      - name: git
      outputs:
      - name: tagList
      platform: linux
      run:
        args:
        - -c
        - |-
          GIT_REF=`[ -f git/.git/ref ] && cat git/.git/ref || true`
          VERSION=`[ -f version/version ] && cat version/version || true`
          printf "%s %s latest" "$GIT_REF" "$VERSION" > tagList/tagList
          printf "Image will be tagged with: %s\n" $(cat tagList/tagList)
        path: /bin/sh
    task: create-tag-list
    timeout: 1h
  - config:
      image_resource:
        name: ""
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-buildx
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      - name: tagList
      params:
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
        DOCKER_CONFIG_JSON: ((halfpipe-gcr.docker_config))
        RUNNING_IN_CI: "true"
      platform: linux
      run:
        args:
        - -c
        - |-
          echo $DOCKER_CONFIG_JSON > ~/.docker/config.json
          echo $ docker buildx build \
            -f git/e2e/concourse/docker-push-paths/dockerfiles/Dockerfile \
            --push \
            --provenance false \
            --platform linux/amd64 \
            --tag eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe:$(cat git/.git/ref) \
            --build-arg ARTIFACTORY_PASSWORD \
            --build-arg ARTIFACTORY_URL \
            --build-arg ARTIFACTORY_USERNAME \
            --build-arg RUNNING_IN_CI \
            --secret id=ARTIFACTORY_PASSWORD \
            --secret id=ARTIFACTORY_URL \
            --secret id=ARTIFACTORY_USERNAME \
            git/e2e/concourse/docker-push-paths
          docker buildx build \
            -f git/e2e/concourse/docker-push-paths/dockerfiles/Dockerfile \
            --push \
            --provenance false \
            --platform linux/amd64 \
            --tag eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe:$(cat git/.git/ref) \
            --build-arg ARTIFACTORY_PASSWORD \
            --build-arg ARTIFACTORY_URL \
            --build-arg ARTIFACTORY_USERNAME \
            --build-arg RUNNING_IN_CI \
            --secret id=ARTIFACTORY_PASSWORD \
            --secret id=ARTIFACTORY_URL \
            --secret id=ARTIFACTORY_USERNAME \
            git/e2e/concourse/docker-push-paths
        path: /bin/sh
    privileged: true
    task: build
    timeout: 1h
  - config:
      image_resource:
        name: ""
        source:
          repository: aquasec/trivy
        type: docker-image
      inputs:
      - name: git
      params:
        DOCKER_CONFIG_JSON: ((halfpipe-gcr.docker_config))
      platform: linux
      run:
        args:
        - -c
        - |-
          [ -f .trivyignore ] && echo "Ignoring the following CVE's due to .trivyignore" || true
          [ -f .trivyignore ] && cat .trivyignore; echo || true
          trivy image --timeout 15m --ignore-unfixed --severity CRITICAL --scanners vuln --exit-code 0 eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe:$(cat ../../../.git/ref) || true
        dir: git/e2e/concourse/docker-push-paths
        path: /bin/sh
    task: trivy
    timeout: 1h
  - config:
      image_resource:
        name: ""
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-buildx
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      - name: tagList
      params:
        DOCKER_CONFIG_JSON: ((halfpipe-gcr.docker_config))
      platform: linux
      run:
        args:
        - -c
        - |-
          echo $DOCKER_CONFIG_JSON > ~/.docker/config.json
          for tag in $(cat tagList/tagList) ; do docker buildx imagetools create eu.gcr.io/halfpipe-io/cache/springerplatformengineering/halfpipe:$(cat git/.git/ref) --tag springerplatformengineering/halfpipe:$tag; done
        path: /bin/sh
    privileged: true
    task: publish-final-image
    timeout: 1h
  serial: true
resources:
- check_every: 10m0s
  name: git
  source:
    branch: main
    paths:
    - e2e/concourse/docker-push-paths
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
  type: git
