# Generated using halfpipe cli version 0.0.0-DEV
jobs:
- build_log_retention:
    minimum_succeeded_builds: 1
  name: deploy to cf without the jazz
  plan:
  - attempts: 2
    get: git
    timeout: 15m
    trigger: true
  - attempts: 2
    no_get: true
    params:
      appPath: git/e2e/concourse/deploy-cf-rolling
      cliVersion: cf7
      command: halfpipe-rolling-deploy
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/concourse/deploy-cf-rolling/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    put: halfpipe-rolling-deploy
    resource: rolling-cf-dev-api-halfpipe-team-dev
    timeout: 5m
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  name: deploy to cf
  plan:
  - attempts: 2
    get: git
    passed:
    - deploy to cf without the jazz
    timeout: 15m
    trigger: true
  - attempts: 2
    no_get: true
    params:
      appPath: git/e2e/concourse/deploy-cf-rolling
      cliVersion: cf6
      command: halfpipe-push
      gitRefPath: git/.git/ref
      instances: 1
      manifestPath: git/e2e/concourse/deploy-cf-rolling/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    put: deploy-test-app
    resource: rolling-cf-dev-api-halfpipe-team-dev
    timeout: 5m
  - config:
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
      image_resource:
        name: ""
        source:
          password: ((halfpipe-gcr.private_key))
          registry_mirror:
            host: eu-mirror.gcr.io
          repository: eu.gcr.io/halfpipe-io/halfpipe-fly
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      params:
        A: blah
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
        RUNNING_IN_CI: "true"
        TEST_ROUTE: halfpipe-example-kotlin-dev-dev-CANDIDATE.some.random.domain.com
      platform: linux
      run:
        args:
        - -c
        - |
          if ! which bash > /dev/null && [ "$SUPPRESS_BASH_WARNING" != "true" ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo "Or if you are sure you don't need bash you can suppress this warning by setting the environment variable \"SUPPRESS_BASH_WARNING\" to \"true\"."
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:buster-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../../.git/ref`

          ./smoke-test.sh
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/concourse/deploy-cf-rolling
        path: /bin/sh
    task: pre-promote-step
    timeout: 1h
  - attempts: 2
    no_get: true
    params:
      appPath: git/e2e/concourse/deploy-cf-rolling
      cliVersion: cf7
      command: halfpipe-rolling-deploy
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/concourse/deploy-cf-rolling/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    put: halfpipe-rolling-deploy
    resource: rolling-cf-dev-api-halfpipe-team-dev
    timeout: 5m
  - attempts: 2
    no_get: true
    params:
      command: halfpipe-delete-test
      manifestPath: git/e2e/concourse/deploy-cf-rolling/manifest.yml
    put: remove-test-app
    resource: rolling-cf-dev-api-halfpipe-team-dev
    timeout: 5m
  serial: true
resource_types:
- check_every: 24h0m0s
  name: cf-resource
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/cf-resource-v2
    username: _json_key
  type: registry-image
resources:
- check_every: 10m0s
  name: git
  source:
    branch: main
    paths:
    - e2e/concourse/deploy-cf-rolling
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
  type: git
- check_every: 24h0m0s
  name: rolling-cf-dev-api-halfpipe-team-dev
  source:
    api: dev-api
    org: halfpipe-team
    password: very-secret
    space: dev
    username: michiel
  type: cf-resource
