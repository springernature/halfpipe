# Generated using halfpipe cli version 0.0.0-DEV from file e2e/actions/feature-update-pipeline-and-tag/.halfpipe.io.yml
name: update-pipeline-and-tag
"on":
  push:
    branches:
    - main
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: 2.${{ github.run_number }}.0
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
  VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
  VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
defaults:
  run:
    working-directory: e2e/actions/feature-update-pipeline-and-tag
concurrency: ${{ github.workflow }}
jobs:
  update:
    name: update
    runs-on: ee-runner
    timeout-minutes: 60
    outputs:
      synced: ${{ steps.sync.outputs.synced }}
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      with:
        lfs: true
        show-progress: false
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: Sync workflow with halfpipe manifest
      id: sync
      run: halfpipe-update-workflow
      env:
        HALFPIPE_FILE_PATH: .halfpipe.io.yml
    - name: Commit and push changes to workflow
      if: steps.sync.outputs.synced == 'false'
      run: |
        git config user.name halfpipe-io
        git config user.email halfpipe-io@springernature.com
        if git commit -am "[halfpipe] synced workflow $GITHUB_WORKFLOW with halfpipe manifest" && git push; then
          echo ':white_check_mark: Halfpipe successfully updated the workflow' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          echo 'This happened because the workflow was generated from a halfpipe manifest with the `update-pipeline` feature enabled. It keeps the workflow in sync with the halfpipe manifest.' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          echo '[Halfpipe Documentation](https://ee.public.springernature.app/rel-eng/halfpipe/features/#update_pipeline)' >> $GITHUB_STEP_SUMMARY
        else
          echo ':x: Halfpipe failed to update the workflow' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          echo 'This may have happened because newer git commits have already been pushed. Check for newer pipeline runs or manually trigger the workflow.' >> $GITHUB_STEP_SUMMARY
          echo >> $GITHUB_STEP_SUMMARY
          echo '[Halfpipe Documentation](https://ee.public.springernature.app/rel-eng/halfpipe/features/#update_pipeline)' >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
    - name: Tag commit with update-pipeline-and-tag/v$BUILD_VERSION
      run: |-
        git tag -f update-pipeline-and-tag/v$BUILD_VERSION
        git push origin update-pipeline-and-tag/v$BUILD_VERSION
  a1:
    name: A1
    needs:
    - update
    if: needs.update.outputs.synced == 'true'
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      with:
        lfs: true
        show-progress: false
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: A1
      run: |-
        docker-compose \
          -f docker-compose.yml \
          run \
          --use-aliases \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /mnt/halfpipe-cache/team:/var/halfpipe/shared-cache \
          -v /var/run/docker.sock:/var/run/docker.sock \
          app
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
  a2:
    name: A2
    needs:
    - update
    if: needs.update.outputs.synced == 'true'
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      with:
        lfs: true
        show-progress: false
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: A2
      run: |-
        docker-compose \
          -f docker-compose.yml \
          run \
          --use-aliases \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /mnt/halfpipe-cache/team:/var/halfpipe/shared-cache \
          -v /var/run/docker.sock:/var/run/docker.sock \
          app
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
  b:
    name: B
    needs:
    - a1
    - a2
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
      with:
        lfs: true
        show-progress: false
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: B
      run: |-
        docker-compose \
          -f docker-compose.yml \
          run \
          --use-aliases \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /mnt/halfpipe-cache/team:/var/halfpipe/shared-cache \
          -v /var/run/docker.sock:/var/run/docker.sock \
          app
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
