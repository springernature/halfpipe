# Generated using halfpipe cli version 0.0.0-DEV
name: update-pipeline
"on":
  push:
    branches:
    - main
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: 2.${{ github.run_number }}.0
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
  VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
  VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
defaults:
  run:
    working-directory: e2e/actions/feature-update-pipeline
concurrency: ${{ github.workflow }}
jobs:
  a:
    name: A
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: A
      run: |-
        docker-compose -f docker-compose.yml pull
        docker-compose -f docker-compose.yml run \
          --use-aliases \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e DOCKER_CERT_PATH \
          -e DOCKER_HOST=tcp://docker:2376 \
          -e DOCKER_TLS_CERTDIR \
          -e DOCKER_TLS_VERIFY \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /certs:/certs \
          -v /mnt/halfpipe-cache/team:/var/halfpipe/shared-cache \
          app
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
  b:
    name: B
    needs:
    - a
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.3
      with:
        exportEnv: false
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        secrets: |
          /springernature/data/team/very secret | springernature_data_team_very_secret ;
        url: https://vault.halfpipe.io
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: B
      run: |-
        docker-compose -f docker-compose.yml pull
        docker-compose -f docker-compose.yml run \
          --use-aliases \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e DOCKER_CERT_PATH \
          -e DOCKER_HOST=tcp://docker:2376 \
          -e DOCKER_TLS_CERTDIR \
          -e DOCKER_TLS_VERIFY \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e S \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /certs:/certs \
          -v /mnt/halfpipe-cache/team:/var/halfpipe/shared-cache \
          app
      env:
        S: ${{ steps.secrets.outputs.springernature_data_team_very_secret }}
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
  c:
    name: C
    needs:
    - a
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.3
      with:
        exportEnv: false
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        secrets: |
          /springernature/data/team/very secret1 | springernature_data_team_very_secret1 ;
        url: https://vault.halfpipe.io
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        submodules: recursive
    - name: C
      run: |-
        docker-compose -f docker-compose.yml pull
        docker-compose -f docker-compose.yml run \
          --use-aliases \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e DOCKER_CERT_PATH \
          -e DOCKER_HOST=tcp://docker:2376 \
          -e DOCKER_TLS_CERTDIR \
          -e DOCKER_TLS_VERIFY \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e S1 \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /certs:/certs \
          -v /mnt/halfpipe-cache/team:/var/halfpipe/shared-cache \
          app
      env:
        S1: ${{ steps.secrets.outputs.springernature_data_team_very_secret1 }}
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
