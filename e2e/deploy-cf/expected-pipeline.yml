# Generated using halfpipe cli version 0.0.0-DEV
resources:
- name: git
  type: git
  source:
    branch: master
    paths:
    - e2e/deploy-cf
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
  check_every: 10m
- name: CF dev-api halfpipe-team dev
  type: cf-resource
  source:
    api: dev-api
    org: halfpipe-team
    password: very-secret
    space: dev
    username: michiel
  check_every: 24h
resource_types:
- name: cf-resource
  type: registry-image
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/cf-resource-v2
    tag: stable
    username: _json_key
jobs:
- name: deploy to cf without any jazz
  serial: true
  build_log_retention:
    minimum_succeeded_builds: 1
  ensure:
    put: cf halfpipe-cleanup
    resource: CF dev-api halfpipe-team dev
    params:
      cliVersion: cf7
      command: halfpipe-cleanup
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    timeout: 5m
    attempts: 2
  plan:
  - in_parallel:
      steps:
      - get: git
        trigger: true
        attempts: 2
      fail_fast: true
    timeout: 5m
  - put: cf halfpipe-push
    resource: CF dev-api halfpipe-team dev
    params:
      appPath: git/e2e/deploy-cf
      cliVersion: cf7
      command: halfpipe-push
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    timeout: 5m
    attempts: 2
  - put: cf halfpipe-check
    resource: CF dev-api halfpipe-team dev
    params:
      cliVersion: cf7
      command: halfpipe-check
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    timeout: 5m
    attempts: 2
  - put: cf halfpipe-promote
    resource: CF dev-api halfpipe-team dev
    params:
      cliVersion: cf7
      command: halfpipe-promote
      manifestPath: git/e2e/deploy-cf/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    timeout: 5m
    attempts: 2
- name: deploy to cf
  serial: true
  build_log_retention:
    minimum_succeeded_builds: 1
  ensure:
    put: cf halfpipe-cleanup
    resource: CF dev-api halfpipe-team dev
    params:
      cliVersion: cf6
      command: halfpipe-cleanup
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    timeout: 5m
    attempts: 2
  plan:
  - in_parallel:
      steps:
      - get: git
        passed:
        - deploy to cf without any jazz
        trigger: true
        attempts: 2
      fail_fast: true
    timeout: 5m
  - put: cf halfpipe-push
    resource: CF dev-api halfpipe-team dev
    params:
      appPath: git/e2e/deploy-cf
      cliVersion: cf6
      command: halfpipe-push
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf/manifest.yml
      preStartCommand: cf apps; cf events myapp-CANDIDATE
      testDomain: some.random.domain.com
      timeout: 5m
    timeout: 5m
    attempts: 2
  - put: cf halfpipe-check
    resource: CF dev-api halfpipe-team dev
    params:
      cliVersion: cf6
      command: halfpipe-check
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    timeout: 5m
    attempts: 2
  - in_parallel:
      steps:
      - do:
        - task: pre promote step
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                password: ((halfpipe-gcr.private_key))
                repository: eu.gcr.io/halfpipe-io/halfpipe-fly
                tag: latest
                username: _json_key
            params:
              A: blah
              ARTIFACTORY_PASSWORD: ((artifactory.password))
              ARTIFACTORY_URL: ((artifactory.url))
              ARTIFACTORY_USERNAME: ((artifactory.username))
              TEST_ROUTE: halfpipe-example-kotlin-dev-dev-CANDIDATE.some.random.domain.com
            run:
              path: /bin/sh
              args:
              - -c
              - |
                if ! which bash > /dev/null; then
                  echo "WARNING: Bash is not present in the docker image"
                  echo "If your script depends on bash you will get a strange error message like:"
                  echo "  sh: yourscript.sh: command not found"
                  echo "To fix, make sure your docker image contains bash!"
                  echo ""
                  echo ""
                fi

                if [ -e /etc/alpine-release ]
                then
                  echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
                  echo "There is a known issue where DNS resolving does not work as expected"
                  echo "https://github.com/gliderlabs/docker-alpine/issues/255"
                  echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
                  echo "we recommend debian:stretch-slim as an alternative"
                  echo ""
                  echo ""
                fi

                export GIT_REVISION=`cat ../../.git/ref`

                ./smoke-test.sh
                EXIT_STATUS=$?
                if [ $EXIT_STATUS != 0 ] ; then
                  exit 1
                fi
              dir: git/e2e/deploy-cf
            inputs:
            - name: git
            caches:
            - path: ../../../var/halfpipe/cache
            - path: ../../../halfpipe-cache
          attempts: 1
    timeout: 5m
  - put: cf halfpipe-promote
    resource: CF dev-api halfpipe-team dev
    params:
      cliVersion: cf6
      command: halfpipe-promote
      manifestPath: git/e2e/deploy-cf/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    timeout: 5m
    attempts: 2

